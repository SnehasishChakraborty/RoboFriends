{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","string","concat","className","alt","src","CardList","robots","cardCarousel","map","user","i","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredrobots","filter","robot","toLowerCase","includes","length","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACnBC,EAAS,wBAAwBC,OAAOJ,EAAG,qBACjD,OACC,sBAAKK,UAAU,mDAAf,UACC,qBAAKC,IAAM,QAAQC,IAAOJ,IAC1B,gCACC,6BAAKF,IACL,4BAAIC,WCMOM,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,EAAeD,EAAOE,KAAI,SAACC,EAAKC,GACrC,OAAO,cAAC,EAAD,CAAcb,GAAIS,EAAOI,GAAGb,GAAIC,KAAMQ,EAAOI,GAAGZ,KAAMC,MAAOO,EAAOI,GAAGX,OAA5DW,MAGnB,OACC,8BACKH,KCAQI,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,QAASC,OAAQ,SAA7D,SACEJ,EAAMK,YC8CKC,G,wDA7Cd,aAAc,IAAD,8BACZ,gBAaDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACZnB,OAAS,GACTgB,YAAc,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAaA,EAASC,UAC3BF,MAAK,SAACG,GAAD,OAAS,EAAKT,SAAS,CAACf,OAAQwB,S,+BAO9B,IAAD,EACyBC,KAAKN,MAA7BnB,EADD,EACCA,OAAQgB,EADT,EACSA,YACVU,EAAiB1B,EAAO2B,QAAO,SAAAC,GACpC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASd,EAAYa,kBAEtD,OAAI7B,EAAO+B,OAIT,sBAAKnC,UAAY,KAAjB,UACC,6CACA,qBAAKA,UAAY,MAAjB,SACC,uBAAOA,UAAY,4CACnBoC,KAAO,SACPC,YAAc,gBACdC,SAAYT,KAAKZ,mBAGlB,cAAC,EAAD,UACC,cAAC,EAAD,CAAUb,OAAU0B,SAbhB,oBAAI9B,UAAU,KAAd,4B,GAzBQuC,cCOHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1e12ee18.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email}) => {\r\n\tconst string = \"https://robohash.org/\".concat(id,\".png?size=200x200\");\r\n\treturn (\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt = 'robot' src = {string}/>\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\tconst cardCarousel = robots.map((user,i) => {\r\n\t\treturn <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n\t});\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n    \t\t{cardCarousel}\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style = {{overflowY: 'scroll', border: '0.2px', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = { \r\n\t\t\trobots : [],\r\n\t\t\tsearchfield : '' \r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then((response)=> response.json())\r\n\t\t.then((users)=>this.setState({robots: users}))\r\n\t}\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield : event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredrobots = robots.filter(robot => { \r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\tif(!robots.length)\r\n\t\t\treturn <h2 className='tc'>Loading...</h2>\r\n\t\telse{\r\n\t\t\treturn(\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1>RoboFriends</h1>\r\n\t\t\t\t\t<div className = 'pa2'>\r\n\t\t\t\t\t\t<input className = 'pa3 ba b--green bg-lightest-blue shadow-5' \r\n\t\t\t\t\t\ttype = 'search' \r\n\t\t\t\t\t\tplaceholder = 'search robots' \r\n\t\t\t\t\t\tonChange = {this.onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots = {filteredrobots}/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t    </div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}